{
    "$schema": "https://meta.comcast.com/firebolt/config/power",
    "$id": "https://meta.comcast.com/firebolt/config/power",
    "title": "PowerPolicy",
    "definitions": {
        "PowerState": {
            "title": "PowerState",
            "description": "List of possible power states.",
            "type": "string",
            "enum": [
                "active",
                "standby",
                "suspended"
            ]
        },
        "PowerPolicy": {
            "title": "PowerPolicy",
            "description": "A configuration describing when to move to which power states.",
            "type": "object",
            "required": [
                "defaults",
                "transitions"
            ],
            "additionalProperties": false,
            "properties": {
                "defaults": {
                    "type": "object",
                    "description": "Default values to use when a corresponding user setting does not exist.",
                    "additionalProperties": false,
                    "required": [
                        "networkEnabledDuringSuspended",
                        "suspendedTimer",
                        "standbyTimerWarningTime"
                    ],
                    "properties": {
                        "networkEnabledDuringSuspended": {
                            "description": "Whether the network should remain active while in the suspended state.",
                            "type": "boolean",
                            "default": false
                        },
                        "suspendedTimer": {
                            "description": "The duration, starting from when the device goes to standby, after which the device will go into suspended if it is not awoken first.",
                            "type": "integer",
                            "default": 900000
                        },
                        "standbyTimerWarningTime": {
                            "description": "How much time, in ms, before a user-set standby timer takes effect, that a warning event be fired, e.g. to enable a UI to present a prompt to cancel.",
                            "type": "integer",
                            "default": 300000
                        }
                    }
                },
                "transitions": {
                    "type": "object",
                    "required": [
                        "activeToStandby",
                        "standbyToSuspended",
                        "suspendedToStandby",
                        "standbyToActive"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "activeToStandby": {
                            "$ref": "#/definitions/TransitionPolicy"
                        },
                        "standbyToSuspended": {
                            "$ref": "#/definitions/TransitionPolicy"
                        },
                        "suspendedToStandby": {
                            "$ref": "#/definitions/TransitionPolicy"
                        },
                        "standbyToActive": {
                            "$ref": "#/definitions/TransitionPolicy"
                        }
                    }
                }
            },
            "examples": [
                {
                    "defaults": {
                        "standbyTimerWarningTime": 5000,
                        "networkEnabledDuringSuspended": false,
                        "suspendedTimer": 1000
                    },
                    "transitions": {
                        "standbyToActive": {
                            "conditions": [
                                {
                                    "remoteKey": "*"
                                }
                            ]
                        },
                        "activeToStandby": {
                            "conditions": [
                                {
                                    "remoteKey": "power"
                                },
                                {
                                    "deviceKey": "power"
                                },
                                {
                                    "userIdle": true
                                },
                                {
                                    "decoderIdle": true
                                },
                                {
                                    "standbyTimerEnded": true
                                },
                                {
                                    "hdmiCec": "standby"
                                }
                            ]
                        },
                        "standbyToSuspended": {
                            "conditions": [
                                {
                                    "suspendedTimerEnded": true
                                }
                            ]
                        },
                        "suspendedToStandby": {
                            "conditions": [
                                {
                                    "remoteKey": "power"
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "TransitionPolicy": {
            "title": "TransitionPolicy",
            "description": "A set of conditions that will initiate a specific power state transtion if they are ALL true.",
            "type": "object",
            "required": ["conditions"],
            "additionalProperties": false,
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyCondition"
                    }
                }
            }
        },
        "PolicyCondition": {
            "title": "PolicyCondition",
            "type": "object",
            "minProperties": 1,
            "additionalProperties": false,
            "properties": {
                "remoteKey": {
                    "description": "Requires a specific, or any, remote key to be pressed to activate this policy",
                    "type": "string",
                    "enum": [
                        "power",
                        "*"
                    ]
                },
                "deviceKey": {
                    "description": "Requires a specific, or any, hardware key to be pressed to activate this policy",
                    "type": "string",
                    "enum": [
                        "power",
                        "*"
                    ]
                },
                "hdmiCec": {
                    "description": "Requires that an HDMI-CEC message has been recieved to activate this policy",
                    "type": "string",
                    "enum": [
                        "standby",
                        "wake"
                    ]
                },
                "standbyTimerEnded": {
                    "description": "Requires that the standby timer has concluded, and will put the device to standby, to activate this policy",
                    "type": "boolean"
                },
                "suspendedTimerEnded": {
                    "description": "Requires that the suspended timer has concluded, and will put the suspend the device, to activate this policy",
                    "type": "boolean"
                },
                "userIdle": {
                    "type": "boolean",
                    "description": "Requires that there has been no user interaction for a set period of time"
                },
                "decoderIdle": {
                    "type": "boolean",
                    "description": "Requires that there has been no decoder activity for a set period of time"
                },
                "systemIdle": {
                    "type": "boolean",
                    "description": "Requires that the system is not performing any critical, uninteruptible tasks, e.g. software updates"
                },
                "externalDevicesIdle": {
                    "type": "boolean",
                    "description": "Requires that no external devices are performing any critical, uninteruptible tasks, e.g. software updates"
                }
            }            
        }
    }
}